version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: candles_db
    environment:
      POSTGRES_DB: candles_db
      POSTGRES_USER: candles_user
      POSTGRES_PASSWORD: candles_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U candles_user -d candles_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - candles_network

  # FastAPI Backend
  backend:
    build: .
    container_name: candles_backend
    environment:
      - DATABASE_URL=postgresql://candles_user:candles_password@postgres:5432/candles_db
      - API_KEY=your_secure_api_key_here
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./app:/app/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - candles_network

  # React Frontend
  frontend:
    build: ./frontend
    container_name: candles_frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    environment:
      - VITE_API_BASE_URL=http://localhost:8000
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - candles_network

  # Redis (for caching and sessions - optional)
  redis:
    image: redis:7-alpine
    container_name: candles_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - candles_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  candles_network:
    driver: bridge 